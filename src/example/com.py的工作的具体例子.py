import numpy as np
from src.com import *

# 定义3个水分子的初始笛卡尔坐标（单位：Å），稍作平移和旋转
coor = [
    # 第一个水分子
    np.array([
        [0.0, 0.0, 0.0],         # 氧原子 O
        [0.9572, 0.0, 0.0],      # 氢原子 H1
        [-0.239988, 0.926627, 0.0]  # 氢原子 H2
    ]),
    # 第二个水分子，进行平移
    np.array([
        [1.0, 1.0, 1.0],         # 氧原子 O
        [1.9572, 1.0, 1.0],      # 氢原子 H1
        [0.760012, 1.926627, 1.0]   # 氢原子 H2
    ]),
    # 第三个水分子，进行旋转和平移
    np.array([
        [2.0, 2.0, 2.0],         # 氧原子 O
        [2.9572, 2.5, 2.0],      # 氢原子 H1，Y坐标略有变化
        [1.760012, 2.926627, 2.5]  # 氢原子 H2，Z坐标略有变化
    ])
]

# 定义水分子中每个原子的质量（单位：amu）
mass = [
    np.array([16.0, 1.008, 1.008]),
    np.array([16.0, 1.008, 1.008]),
    np.array([16.0, 1.008, 1.008])
]

# 定义晶胞矩阵（5x5x5）用于坐标变换
scalmatrix = np.array([
    [
        [5.0, 0.0, 0.0],
        [0.0, 5.0, 0.0],
        [0.0, 0.0, 5.0]
    ],
    [
        [5.0, 0.0, 0.0],
        [0.0, 5.0, 0.0],
        [0.0, 0.0, 5.0]
    ],
    [
        [5.0, 0.0, 0.0],
        [0.0, 5.0, 0.0],
        [0.0, 0.0, 5.0]
    ]
])

# 定义原子数（每个分子内的原子数）
numatoms = [3, 3, 3]  # 每个水分子有1个氧原子 + 2个氢原子

# 其他参数
force = [np.zeros((3, 3)), np.zeros((3, 3)), np.zeros((3, 3))]  # 假设没有力
maxnumatom = 3
table_coor = 0  # 输入的是笛卡尔坐标，需要转换
start_table = 0  # 不需要重新排序力

# 使用 get_com 函数
com_coor, order_force = get_com(coor, force, mass, scalmatrix, numatoms, maxnumatom, table_coor, start_table)

# 输出结果
print("相对于质心变换后的水分子坐标（放入 5×5×5 晶胞中）：")
for i, com in enumerate(com_coor):
    print(f"水分子 {i+1} 的质心坐标：")
    print(com)





